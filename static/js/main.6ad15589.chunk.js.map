{"version":3,"sources":["utilities/localStorage.tsx","atoms.tsx","Components/DragabbleCard.tsx","Components/Board.tsx","Components/DroppableTrash.tsx","App.tsx","index.tsx","theme.ts"],"names":["LOCAL_TODO","saveTodos","todos","localStorage","setItem","JSON","stringify","toDoState","atom","key","default","Doing","Done","todoStorage","localTodos","getItem","parse","loadTodos","Card","styled","div","props","isDragging","theme","cardColor","DragabbleCard","toDoId","toDoText","index","draggableId","magic","snapshot","ref","innerRef","dragHandleProps","draggableProps","React","memo","Wrapper","boardColor","Title","h2","Area","isDraggingOver","isDraggingFromThis","Form","form","AddToDo","input","Board","toDos","boardId","setToDos","useSetRecoilState","useForm","register","setValue","handleSubmit","onSubmit","toDo","newToDo","id","Date","now","text","allBoards","result","required","type","placeholder","droppableId","info","Boolean","draggingFromThisWith","droppableProps","map","Container","Content","DroppableTrash","provided","Boards","App","useRecoilState","onDragEnd","destination","source","boardCopy","taskObj","splice","sourceBoard","destinationBoard","Object","keys","GlobalStyle","createGlobalStyle","bgColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ad15589.chunk.js","sourcesContent":["import { IToDoState } from '../atoms';\r\n\r\nexport const LOCAL_TODO = 'storedTodos';\r\n\r\nexport const loadTodos = () => {\r\n    const localTodos = localStorage.getItem(LOCAL_TODO);\r\n    if (localTodos) {\r\n        return JSON.parse(localTodos);\r\n    }\r\n    return null;\r\n};\r\n\r\nexport const saveTodos = (todos: IToDoState) => {\r\n    localStorage.setItem(LOCAL_TODO, JSON.stringify(todos));\r\n};","import { atom } from \"recoil\";\r\nimport { loadTodos } from './utilities/localStorage';\r\n\r\n\r\nexport interface ITodo {\r\n  id: number;\r\n  text: string;\r\n}\r\n\r\nexport interface IToDoState {\r\n  [key: string]: ITodo[];\r\n}\r\n\r\n\r\nexport const toDoState = atom<IToDoState>({\r\n  key: \"toDo\",\r\n  default: {\r\n    \"To Do\": [],\r\n    Doing: [],\r\n    Done: [],\r\n  },\r\n});\r\n\r\nexport const trashCanState = atom({ \r\n  key: \"garbageState\", \r\n  default: [] \r\n});\r\n\r\nexport const todoStorage = atom<IToDoState>({\r\n  key: 'storedTodos',\r\n  default: loadTodos() ?? toDoState,\r\n});","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Card = styled.div<{ isDragging: boolean }>`\r\n  display: flex;\r\n  border-radius: 5px;\r\n  margin-bottom: 5px;\r\n  font-size: 15px;\r\n  font-weight: bolder;\r\n  padding: 10px;\r\n  padding-left: 15px;\r\n  background-color: ${(props) =>\r\n    props.isDragging ? \"#e4f2ff\" : props.theme.cardColor};\r\n  box-shadow: ${(props) =>\r\n    props.isDragging ? \"0px 2px 5px rgba(0, 0, 0, 0.05)\" : \"none\"};\r\n`;\r\n\r\n\r\ninterface IDragabbleCardProps {\r\n  toDoId: number;\r\n  toDoText: string;\r\n  index: number;\r\n}\r\n\r\n\r\n\r\nfunction DragabbleCard({ toDoId, toDoText, index }: IDragabbleCardProps) {\r\n  return (\r\n    <Draggable draggableId={toDoId + \"\"} index={index} key={toDoId}>\r\n      {(magic, snapshot) => (\r\n        <Card\r\n          isDragging={snapshot.isDragging}\r\n          ref={magic.innerRef}\r\n          {...magic.dragHandleProps}\r\n          {...magic.draggableProps}\r\n        >\r\n          {toDoText}\r\n        </Card>\r\n        \r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default React.memo(DragabbleCard);","import { useForm } from \"react-hook-form\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport DragabbleCard from \"./DragabbleCard\";\r\nimport { ITodo, toDoState, todoStorage} from \"../atoms\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { saveTodos } from \"../utilities/localStorage\"\r\n\r\nconst Wrapper = styled.div`\r\n  width: 300px;\r\n  padding-top: 10px;\r\n  background-color: ${(props) => props.theme.boardColor};\r\n  border-radius: 5px;\r\n  min-height: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  text-align: center;\r\n  font-weight: 600;\r\n  margin-bottom: 10px;\r\n  font-size: 18px;\r\n`;\r\n\r\ninterface IAreaProps {\r\n  isDraggingFromThis: boolean;\r\n  isDraggingOver: boolean;\r\n}\r\n\r\nconst Area = styled.div<IAreaProps>`\r\n  background-color: ${(props) =>\r\n    props.isDraggingOver\r\n      ? \"#dfe6e9\"\r\n      : props.isDraggingFromThis\r\n      ? \"#b2bec3\"\r\n      : \"transparent\"};\r\n  flex-grow: 1;\r\n  transition: background-color 0.3s ease-in-out;\r\n  padding: 15px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nconst AddToDo = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  width: calc(100% - 30px);\r\n  margin: 0px 15px;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  font-size: 15px;\r\n`;\r\n\r\ninterface IBoardProps {\r\n  toDos: ITodo[];\r\n  boardId: string;\r\n}\r\n\r\ninterface IForm {\r\n  toDo: string;\r\n}\r\n\r\nfunction Board({ toDos, boardId }: IBoardProps) {\r\n  const setToDos = useSetRecoilState(todoStorage);\r\n  const { register, setValue, handleSubmit } = useForm<IForm>();\r\n  const onValid = ({ toDo }: IForm) => {\r\n    const newToDo = {\r\n      id: Date.now(),\r\n      text: toDo,\r\n    };\r\n    setToDos((allBoards) => {\r\n      const result = {\r\n        ...allBoards,\r\n        [boardId]: [newToDo, ...allBoards[boardId]],\r\n      };\r\n      saveTodos(result);\r\n      return  result;\r\n    });\r\n    setValue(\"toDo\", \"\");\r\n  };\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title>{boardId}</Title>\r\n      <Form onSubmit={handleSubmit(onValid)}>\r\n        <AddToDo\r\n          {...register(\"toDo\", { required: true })}\r\n          type=\"text\"\r\n          placeholder={`Add task on ${boardId}`}\r\n        />\r\n      </Form>\r\n      <Droppable droppableId={boardId}>\r\n        {(magic, info) => (\r\n          <Area\r\n            isDraggingOver={info.isDraggingOver}\r\n            isDraggingFromThis={Boolean(info.draggingFromThisWith)}\r\n            ref={magic.innerRef}\r\n            {...magic.droppableProps}\r\n          >\r\n            {toDos.map((toDo, index) => (\r\n              <DragabbleCard\r\n                key={toDo.id}\r\n                index={index}\r\n                toDoId={toDo.id}\r\n                toDoText={toDo.text}\r\n              />\r\n            ))}\r\n            {magic.placeholder}\r\n          </Area>\r\n        )}\r\n      </Droppable>\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Board;","import { Droppable } from \"react-beautiful-dnd\";\r\nimport { FaTrashAlt, FaTrash } from 'react-icons/fa';\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  padding-top: 70px;\r\n  padding-left: 110vh;\r\n`;\r\n\r\n\r\nconst Content = styled.div<{ isDraggingOver: boolean; draggingFromThisWith: boolean }>`\r\n  font-size: 45px;\r\n  width: 45px;\r\n  height: 45px;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => (props.isDraggingOver === true \r\n    ? \"rgba(223, 230, 233,0.3)\" : props.draggingFromThisWith === true \r\n    ? \"rgba(225, 112, 85,0.5)\" : \"transparent\")};\r\n`;\r\n\r\n\r\nfunction DroppableTrash() {\r\n  \r\n  return (\r\n    <Container>\r\n      <Droppable droppableId=\"Trash\">\r\n        {(provided, snapshot) => (\r\n          <Content isDraggingOver={snapshot.isDraggingOver} \r\n          draggingFromThisWith={Boolean(snapshot.draggingFromThisWith)} \r\n          ref={provided.innerRef} \r\n          {...provided.droppableProps}\r\n          >\r\n            {snapshot.isDraggingOver === false ? <FaTrashAlt /> : <FaTrash />}\r\n            {provided.placeholder}\r\n          </Content>\r\n        )}\r\n      </Droppable>\r\n    </Container>\r\n  );\r\n  };\r\n\r\nexport default DroppableTrash;","import { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { todoStorage } from \"./atoms\";\nimport Board from \"./Components/Board\";\nimport DroppableTrash from \"./Components/DroppableTrash\";\nimport { saveTodos } from \"./utilities/localStorage\"\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst Boards = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  width: 100%;\n  gap: 10px;\n`;\n\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(todoStorage);\n  const onDragEnd = (info: DropResult) => {\n    const { destination, source } = info;\n    if (!destination) return;\n    if (destination?.droppableId === source.droppableId) {\n      // same board movement.\n      setToDos((allBoards) => {\n        const boardCopy = [...allBoards[source.droppableId]];\n        const taskObj = boardCopy[source.index];\n        boardCopy.splice(source.index, 1);\n        boardCopy.splice(destination?.index, 0, taskObj);\n        const result = {\n          ...allBoards,\n          [source.droppableId]: boardCopy,\n        };\n        saveTodos(result);\n        return result;\n      });\n    };\n    \n    if (source.droppableId !== destination.droppableId) {\n      if (destination.droppableId === \"Trash\") {\n        setToDos((allBoards) => {\n          const boardCopy = [...allBoards[source.droppableId]];\n          boardCopy.splice(source.index, 1);\n          const result = {\n            ...allBoards,\n            [source.droppableId]: boardCopy,\n          };\n          saveTodos(result);\n          return result;\n        });\n        } else {\n      // cross board movement\n      setToDos((allBoards) => {\n        const sourceBoard = [...allBoards[source.droppableId]];\n        const taskObj = sourceBoard[source.index];\n        const destinationBoard = [...allBoards[destination.droppableId]];\n        sourceBoard.splice(source.index, 1);\n        destinationBoard.splice(destination?.index, 0, taskObj);\n        const result = {\n          ...allBoards,\n          [source.droppableId]: sourceBoard,\n          [destination.droppableId]: destinationBoard,\n        };\n        saveTodos(result);\n        return result;\n      });\n    };\n    };\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Wrapper>\n        <Boards>\n          {Object.keys(toDos).map((boardId) => (\n            <Board boardId={boardId} key={boardId} toDos={toDos[boardId]} />\n          ))}\n        </Boards>\n        <DroppableTrash/>\n      </Wrapper>\n    </DragDropContext>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\n\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:black;\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#3F8CF2\",\r\n  boardColor: \"#DADFE9\",\r\n  cardColor: \"white\",\r\n};"],"sourceRoot":""}